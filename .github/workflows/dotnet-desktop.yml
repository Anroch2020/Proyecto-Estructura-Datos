name: .NET Core Windows Forms App

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [ Debug, Release ]
    runs-on: windows-latest

    env:
      SOLUTION_NAME: Proyecto.sln         # Replace with your solution name
      TEST_PROJECT_PATH: Proyecto.csproj  # Replace with the path to your test project

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Locate MSBuild.exe
        id: msbuild-locate
        shell: pwsh
        run: |
          $msbuild = &"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
          if ([string]::IsNullOrEmpty($msbuild)) {
              Write-Error "MSBuild.exe not found"
              exit 1
          }
          echo "msbuild_path=$msbuild" >> $env:GITHUB_OUTPUT

      - name: Execute Unit Tests
        run: dotnet test ${{ env.TEST_PROJECT_PATH }}

      - name: Restore the Application
        run: msbuild ${{ env.SOLUTION_NAME }} /t:Restore /p:Configuration=${{ matrix.configuration }}

      - name: Build the Application using MSBuild
        shell: pwsh
        run: |
          $msbuildPath = "${{ steps.msbuild-locate.outputs.msbuild_path }}"
          Write-Host "Using MSBuild: $msbuildPath"
          & $msbuildPath $env:SOLUTION_NAME /p:Configuration=${{ matrix.configuration }}

      - name: Publish the Application using MSBuild
        shell: pwsh
        run: |
          $msbuildPath = "${{ steps.msbuild-locate.outputs.msbuild_path }}"
          $solutionDir = Split-Path -Parent $env:SOLUTION_NAME
          Set-Location $solutionDir
          Write-Host "Publishing using MSBuild: $msbuildPath"
          & $msbuildPath $env:SOLUTION_NAME /t:Publish /p:Configuration=${{ matrix.configuration }} /p:OutputPath="${{ github.workspace }}\artifacts"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build Artifacts ${{ matrix.configuration }}
          path: ${{ github.workspace }}\artifacts
